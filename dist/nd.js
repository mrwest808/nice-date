"use strict";var _interopRequire=function(obj){return obj && obj.__esModule?obj["default"]:obj;};var _createClass=(function(){function defineProperties(target, props){for(var key in props) {var prop=props[key];prop.configurable = true;if(prop.value)prop.writable = true;}Object.defineProperties(target, props);}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();var _classCallCheck=function(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}};var _helpers=require("./helpers");var merge=_helpers.merge;var is=_helpers.is;var defaults=_interopRequire(require("./options"));var m=_interopRequire(require("./methods"));var NiceDate=(function(){function NiceDate(date, opts){_classCallCheck(this, NiceDate);date = typeof date === "undefined" || date == null?new Date():new Date(date);if(isNaN(date.getTime()))throw new TypeError("'constructor' - invalid date format");this.o = is.object(opts)?merge({}, defaults, opts):defaults;this.d = date;}_createClass(NiceDate, {get:{value:function get(format){var fn=m.get[format];if(!fn)throw new ReferenceError("'get' - invalid format");return fn.apply(this);}}, set:{value:function set(format){for(var _len=arguments.length, args=Array(_len > 1?_len - 1:0), _key=1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}var fn=m.set[format];if(!fn)throw new ReferenceError("'set' - invalid format");return fn.apply(this, args);}}, diff:{value:function diff(format){var fn=!format?m.diff["default"]:m.diff[format];if(!fn)throw new ReferenceError("'diff'");return fn.apply(this);}}, add:{value:function add(number, format){var fn=m.add[format];if(!fn)throw new ReferenceError("'add' - invalid format");fn.apply(this, [number]);return this;}}, sub:{value:function sub(number, format){var fn=m.add[format];if(!fn)throw new ReferenceError("'sub' - invalid format");fn.apply(this, [-number]);return this;}}, daysOf:{value:function daysOf(measure){var fn=m.daysOf[measure];if(!fn)throw new ReferenceError("'days' - invalid measure");return fn.apply(this);}}});return NiceDate;})();module.exports = NiceDate;